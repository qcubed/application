<?php
    /** @var QSqlTable $objTable */
use QCubed\Project\Codegen\CodegenBase;

/** @var \QCubed\Codegen\DatabaseCodeGen $objCodeGen */
    global $_TEMPLATE_SETTINGS;

    $strPropertyName = CodegenBase::dataListPropertyName($objTable);

    $_TEMPLATE_SETTINGS = array(
        'OverwriteFlag' => true,
        'DirectorySuffix' => '',
        'TargetDirectory' => __PANEL_GEN__,
        'TargetFileName' => $strPropertyName . 'ListPanelGen.php'
    );

    $listCodegenerator = $objCodeGen->getDataListCodeGenerator($objTable);
    $strListVarName = $objCodeGen->dataListVarName($objTable);
    $options = $objTable->Options;

    // Check codegen settings file to see if we want to use a dialog or a form to edit a record
    $blnUseDialog = (isset($options['EditMode']) && $options['EditMode'] == 'dialog');

    $blnUseFilter = !$listCodegenerator->dataListHasFilter();

    if (isset($objTable->Options['CreateFilter'])) {
        $blnUseFilter = $objTable->Options['CreateFilter'];
    }

?>
<?php print("<?php\n"); ?>

use QCubed as Q;
use QCubed\Project\Application;
use QCubed\Query\QQ;
use QCubed\Control\Panel;
use QCubed\Project\Control\TextBox;
use QCubed\Query\Condition\ConditionInterface as QQCondition;

<?php if ($blnUseDialog) {
    ?>
	include (__DIALOG__ . '/<?= $strPropertyName ?>EditDlg.php');
<?php 
} ?>


/**
 * This is the base list class for the  <?= $strPropertyName ?> class.
 *
 * Do not edit this file, this file is overwritten on any code regenerations. Make any changes you need to the subclass.
 *
 */
abstract class <?= $strPropertyName ?>ListPanelGen extends \QCubed\Control\Panel
{
<?php include("list_protected_member_variables.tpl.php"); ?>

	public function __construct($objParent, $strControlId = null) {
		parent::__construct($objParent, $strControlId);

<?php if ($blnUseDialog) {
    ?>
		$this->dlgEdit = new <?= $strPropertyName ?>EditDlg($this);
<?php 
} ?>
<?php if ($blnUseFilter) {
    ?>
		$this->createFilterPanel();
<?php 
} ?>
<?= $listCodegenerator->dataListInstantiate($objCodeGen, $objTable); ?>
<?php if ($blnUseFilter) {
    ?>
		$this-><?= $strListVarName ?>->setDataBinder('BindData', $this);
<?php 
} ?>
		$this->createButtonPanel();
	}

<?= $listCodegenerator->dataListHelperMethods($objCodeGen, $objTable); ?>


<?php if ($blnUseFilter) {
    ?>
<?php include("list_createFilter.tpl.php"); ?>
<?php include("list_createDataBinder.tpl.php"); ?>
<?php 
} ?>


<?php include("list_createButtons.tpl.php"); ?>

<?php include("list_edit_item.tpl.php"); ?>

}
